name: CI - Build and Test

on:
    push:
        branches: [main, develop]
    pull_request:
        branches: [main, develop]

jobs:
    lint-and-test-frontend:
        name: Lint and Test Frontend
        runs-on: ubuntu-latest

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18"
                  cache: "npm"

            - name: Install dependencies
              run: npm ci

            - name: Run linter
              run: npm run lint || true

            - name: Build frontend
              run: npm run build

            - name: Upload build artifacts
              uses: actions/upload-artifact@v4
              with:
                  name: frontend-dist
                  path: dist/
                  retention-days: 7

    test-services:
        name: Test Microservices
        runs-on: ubuntu-latest

        strategy:
            matrix:
                service: [auth, event, ticket, payment]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Setup Node.js
              uses: actions/setup-node@v4
              with:
                  node-version: "18"

            - name: Install dependencies
              working-directory: ./${{ matrix.service }}
              run: npm ci

            - name: Run tests
              working-directory: ./${{ matrix.service }}
              run: npm test || echo "No tests configured"

    build-docker-images:
        name: Build Docker Images
        runs-on: ubuntu-latest
        needs: [lint-and-test-frontend, test-services]

        strategy:
            matrix:
                service: [auth, event, ticket, payment, frontend]

        steps:
            - name: Checkout code
              uses: actions/checkout@v4

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Build ${{ matrix.service }} image
              uses: docker/build-push-action@v5
              with:
                  context: ${{ matrix.service == 'frontend' && '.' || matrix.service }}
                  file: ${{ matrix.service == 'frontend' && './Dockerfile.frontend' || format('./{0}/Dockerfile', matrix.service) }}
                  push: false
                  tags: ticketer-${{ matrix.service }}:test
                  cache-from: type=gha
                  cache-to: type=gha,mode=max
